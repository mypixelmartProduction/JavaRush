package com.javarush.test.level17.lesson10.bonus01;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;

/* CRUD
CrUD - Create, Update, Delete
Программа запускается с одним из следующих наборов параметров:
-c name sex bd
-u id name sex bd
-d id
-i id
Значения параметров:
name - имя, String
sex - пол, "м" или "ж", одна буква
bd - дата рождения в следующем формате 15/04/1990
-с  - добавляет человека с заданными параметрами в конец allPeople, выводит id (index) на экран
-u  - обновляет данные человека с данным id
-d  - производит логическое удаление человека с id
-i  - выводит на экран информацию о человеке с id: name sex (м/ж) bd (формат 15-Apr-1990)

id соответствует индексу в списке
Все люди должны храниться в allPeople
Используйте Locale.ENGLISH в качестве второго параметра для SimpleDateFormat

Пример параметров: -c Миронов м 15/04/1990
*/

public class Solution
{
    public static List<Person> allPeople = new ArrayList<Person>();

    static
    {
        allPeople.add(Person.createMale("Иванов Иван", new Date()));  //сегодня родился    id=0
        allPeople.add(Person.createMale("Петров Петр", new Date()));  //сегодня родился    id=1

    }

    public static void main(String[] args) throws IOException
    {
        String inputString = reader();
        checkInputData(inputString);
    }

    private static void checkInputData(String inputString)
    {
        String[] param = splitIntoPieces(inputString);
        String create = "-c", update = "-u", delete = "-d", information = "-i";
        try
        {

            if (param[0].equals(create))
            {
                createMethod(inputString);
            } else if (param[0].equals(update))
            {
                updateMethod(inputString);
            } else if (param[0].equals(delete))
            {
                deleteMethod(inputString);
            } else if (param[0].equals(information))
            {
                informationMethod(inputString);
            }
        }
        catch (ParseException e)
        {
            e.printStackTrace();
        }
    }


    private static void informationMethod(String inputString) throws ParseException
    {
        String[] partsOfInputString = splitIntoPieces(inputString);
        int id = Integer.parseInt(partsOfInputString[1]);
        printString(allPeople.get(id));
    }

    private static void printString(Person person) throws ParseException
    {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy", Locale.ENGLISH);
        String date = dateFormat.format(person.getBirthDay());

        String sex;
        if (person.getSex() == Sex.MALE)
        {
            sex = "м";
        } else
        {
            sex = "ж";
        }

        System.out.println(person.getName() + " " + sex + " " + date);
    }

    private static void deleteMethod(String inputString)
    {
        String[] partsOfInputString = splitIntoPieces(inputString);
        int id = Integer.parseInt(partsOfInputString[1]);
        allPeople.remove(id);
    }

    private static void updateMethod(String inputString) throws ParseException
    {
        String[] partsOfInputString = splitIntoPieces(inputString);
        int id = Integer.parseInt(partsOfInputString[1]);
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/mm/yyyy");
        Person person = allPeople.get(id);

        person.setName(partsOfInputString[2]);
        if (partsOfInputString[3].equals("м"))
        {
            person.setSex(Sex.MALE);
        } else if (partsOfInputString[2].equals("ж"))
        {
            person.setSex(Sex.FEMALE);
        }
        person.setBirthDay(dateFormat.parse(partsOfInputString[4]));

    }

    private static void createMethod(String inputString) throws ParseException
    {
        String[] partsOfInputString = splitIntoPieces(inputString);
        String name = partsOfInputString[1];
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/mm/yyyy");
        Date bd = dateFormat.parse(partsOfInputString[3]);
        Sex sex;
        if (partsOfInputString[2].equals("м"))
        {
            sex = Sex.MALE;
            allPeople.add(Person.createMale(name, bd));
        } else if (partsOfInputString[2].equals("ж"))
        {
            sex = Sex.FEMALE;
            allPeople.add(Person.createFemale(name, bd));
        }
        System.out.println(lastPeopleIndex());
    }


    private static String reader() throws IOException
    {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        return reader.readLine();
    }

    private static String[] splitIntoPieces(String inputString)
    {
        return inputString.split(" ");
    }

    private static int lastPeopleIndex()
    {
        return allPeople.size() - 1;
    }
}
